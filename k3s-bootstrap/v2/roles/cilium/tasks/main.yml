---
# tasks file for cilium
- name: Set Cilium CLI architecture fact
  ansible.builtin.set_fact:
    cilium_cli_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

- name: Download Cilium CLI for the correct architecture
  ansible.builtin.get_url:
    url: "https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-{{ cilium_cli_arch }}.tar.gz"
    dest: "/tmp/cilium-linux-{{ cilium_cli_arch }}.tar.gz"
    mode: '0644'

- name: Unarchive Cilium CLI to /usr/local/bin
  ansible.builtin.unarchive:
    src: "/tmp/cilium-linux-{{ cilium_cli_arch }}.tar.gz"
    dest: "/usr/local/bin"
    remote_src: yes
    owner: root
    group: root
    mode: '0755'

- name: Install Cilium with recommended settings
  ansible.builtin.command:
    cmd: >
      /usr/local/bin/cilium install
      --namespace kube-system
      --set kubeProxyReplacement=true
      --set k8sServiceHost={{ ansible_default_ipv4.address }}
      --set k8sServicePort=6443
      --set l2announcements.enabled=true
      --set externalIPs.enabled=true
      --set hubble.relay.enabled=true
      --set hubble.ui.enabled=true
      --set loadBalancer.algorithm=maglev
      --set ipam.mode=kubernetes
      --set ingressController.enabled=true
      --set ingressController.loadbalancer.mode=shared
      --set ingressController.service.type=LoadBalancer
  environment:
    KUBECONFIG: "/home/{{ kubeconfig_user }}/.kube/config"
  register: cilium_install_result
  changed_when: "'already installed' not in cilium_install_result.stderr"
  become: no

- name: Validate Cilium Installation
  ansible.builtin.command:
    cmd: "/usr/local/bin/cilium status --wait"
  environment:
    KUBECONFIG: "/home/{{ kubeconfig_user }}/.kube/config"
  register: cilium_status
  until: cilium_status.rc == 0
  retries: 10
  delay: 30
  become: no
