---
- name: Play 1: Install prerequisites on all nodes
  hosts: all
  become: yes
  gather_facts: no
  roles:
    - role: common

- name: Play 2: Install the first k3s master
  hosts: k3s_masters[0]
  become: yes
  roles:
    - role: k3s_master

# Note: We can combine installing other masters and agents if the logic is similar,
# or keep them separate for clarity. Here we assume you might want different logic later.
# For now, let's keep the original logic for joining other masters here.
- name: Play 3: Install other masters and agents
  hosts: k3s_masters:!{{ groups['k3s_masters'][0] }}, k3s_agents
  become: yes
  # These vars are needed for the tasks below
  vars:
    token: "{{ hostvars[groups['k3s_masters'][0]]['k3s_node_token'] }}"
    master_ip: "{{ hostvars[groups['k3s_masters'][0]]['ansible_host'] | default(hostvars[groups['k3s_masters'][0]]['inventory_hostname']) }}"
  tasks:
    # This part is for joining other masters. It's kept here for now.
    # If it grows, it could become its own role: `k3s_master_join`.
    - name: Join other masters to the cluster
      when: inventory_hostname in groups['k3s_masters']
      block:
        - name: Create k3s configuration directory on joining masters
          ansible.builtin.file:
            path: /etc/rancher/k3s
            state: directory
            owner: root
            group: root
            mode: '0755'

        - name: Create k3s config.yaml for other masters
          ansible.builtin.copy:
            content: |
              server: https://{{ master_ip }}:6443
              token: {{ token }}
              flannel-backend: "none"
              disable-kube-proxy: true
            dest: /etc/rancher/k3s/config.yaml
            owner: root
            group: root
            mode: '0644'

        - name: Download k3s installer script on joining masters
          ansible.builtin.get_url:
            url: https://get.k3s.io
            dest: /tmp/k3s-installer.sh
            mode: '0755'
        
        # Original task was commented out, uncomment if needed
        # - name: Install k3s on other masters
        #   ansible.builtin.command: /tmp/k3s-installer.sh server
        #   args:
        #     creates: /etc/systemd/system/k3s.service

    # The agent logic is now handled by the k3s_agent role
    - name: Join agent nodes to the cluster
      when: inventory_hostname in groups['k3s_agents']
      ansible.builtin.include_role:
        name: k3s_agent

- name: Play 4: Install and Validate Cilium CNI
  hosts: k3s_masters[0]
  become: yes
  roles:
    - role: cilium

- name: Play 5: Fetch kubeconfig to local machine
  hosts: k3s_masters[0]
  gather_facts: no
  vars:
    kubeconfig_user: pi
  tasks:
    - name: Remove existing local kubeconfig if it exists
      ansible.builtin.file:
        path: "~/.kube/config"
        state: absent
      delegate_to: localhost

    - name: Fetch the modified kubeconfig from the master
      ansible.builtin.fetch:
        src: "/home/{{ kubeconfig_user }}/.kube/config"
        dest: "~/.kube/config"
        flat: yes
